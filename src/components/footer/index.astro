---
import "../style/mdc/header.scss";
import Tooltip from "../mdc/mdc-tooltip/index.astro";
import { QRCodeSVG } from "qrcode.react";
import  Buttons  from "./NowPageQrcode/react_qrcde_output";
import { SampleCounter } from "./NowPageQrcode/solid_data_input";

---

<!-- Home Header Astro Island -->
<hr />
<div id="demo-menu" class="mdc-menu-surface--anchor" style="margin:10px;">
  <button
    class="material-icons-outlined mdc-top-app-bar__action-item mdc-icon-button"
    aria-label="Favorite"
    id="footer_share"
    aria-describedby="tooltip-sharea"
    ><div class="mdc-icon-button__ripple"></div>share</button
  >
  <div class="mdc-menu mdc-menu-surface" id="footer_share_menu">
    <ul class="mdc-deprecated-list" role="radiogroup">
      <li class="mdc-deprecated-list-item" id="LinkCopy">
        <span class="mdc-deprecated-list-item__ripple"></span>
        <span class="mdc-deprecated-list-item__graphic">
          <span class="material-icons-outlined"> link</span>
        </span>
        <span class="mdc-deprecated-list-item__text"> リンクをコピー</span>
      </li><li class="mdc-deprecated-list-item" id="webpage_qrcode">
        <span class="mdc-deprecated-list-item__ripple"></span>
        <span class="mdc-deprecated-list-item__graphic">
          <span class="material-icons-outlined"> qr_code_2</span>
        </span>
        <span class="mdc-deprecated-list-item__text"> QRコード</span>
      </li>
      <li class="mdc-deprecated-list-item" id="webpage_share">
        <span class="mdc-deprecated-list-item__ripple"></span>
        <span class="mdc-deprecated-list-item__graphic">
          <span class="material-icons-outlined"> share</span>
        </span>
        <span class="mdc-deprecated-list-item__text"> 共有する</span>
      </li>
    </ul>
  </div>
  <button
    class="material-icons-outlined mdc-top-app-bar__action-item mdc-icon-button"
    aria-label="Favorite"
    id="footer_share"
    aria-describedby="tooltip-share"
    aria-describedby="tooltip-id"
    ><div class="mdc-icon-button__ripple"></div>menu</button
  >
</div>

<div class="mdc-dialog" id="QRcodeshare">
  <div class="mdc-dialog__container">
    <div
      class="mdc-dialog__surface"
      role="alertdialog"
      aria-modal="true"
      aria-labelledby="my-dialog-title"
      aria-describedby="my-dialog-content"
      tabindex="-1"
    >
      <!-- Title cannot contain leading whitespace due to mdc-typography-baseline-top() -->
      <h2 class="mdc-dialog__title" id="my-dialog-title">
        <!--
     -->QRコードで共有する<!--
   -->
      </h2>
      <div class="mdc-dialog__content" id="my-dialog-content">
        <div class="grid_qrcode"
        >
       <!--  <Buttons client:load/>
          <SampleCounter client:load url={Astro.url}/> -->
          この機能は一時的にご利用いただけません。
        </div>
      </div>
      <div class="mdc-dialog__actions">
        <button
          type="button"
          class="mdc-button mdc-dialog__button"
          data-mdc-dialog-action="discard"
        >
          <div class="mdc-button__ripple"></div>
          <span class="mdc-button__label">とじる</span>
        </button>
      </div>
    </div>
  </div>
  <div class="mdc-dialog__scrim"></div>
</div>

<aside class="mdc-snackbar">
  <div class="mdc-snackbar__surface" role="status" aria-relevant="additions">
    <div class="mdc-snackbar__label" aria-atomic="false">
      ご利用のブラウザがこの機能に対応していません
    </div>
    <div class="mdc-snackbar__actions" aria-atomic="true">
      <button type="button" class="mdc-button mdc-snackbar__action">
        <div class="mdc-button__ripple"></div>
        <span class="mdc-button__label">OK</span>
      </button>
    </div>
  </div>
</aside>

<aside class="mdc-snackbar" id="copyCancel">
  <div class="mdc-snackbar__surface" role="status" aria-relevant="additions">
    <div class="mdc-snackbar__label" aria-atomic="false">
      コピーできませんでした🥺
    </div>
    <div class="mdc-snackbar__actions" aria-atomic="true">
      <button type="button" class="mdc-button mdc-snackbar__action">
        <div class="mdc-button__ripple"></div>
        <span class="mdc-button__label">OK</span>
      </button>
    </div>
  </div>
</aside>

<aside class="mdc-snackbar" id="copyok">
  <div class="mdc-snackbar__surface" role="status" aria-relevant="additions">
    <div class="mdc-snackbar__label" aria-atomic="false">コピーされました</div>
    <div class="mdc-snackbar__actions" aria-atomic="true">
      <button type="button" class="mdc-button mdc-snackbar__action">
        <div class="mdc-button__ripple"></div>
        <span class="mdc-button__label">OK</span>
      </button>
    </div>
  </div>
</aside>
<Tooltip text="このページを共有" id="tooltip-sharea" />

<!-- End Home Header Astro Island -->
<script>
  import { MDCMenu } from "@material/menu";
  import { MDCList } from "@material/list";
  import { MDCDialog } from "@material/dialog";
  import { MDCSnackbar } from "@material/snackbar";

  const mdcSnackbarCopyok = document.querySelector(".mdc-snackbar#copyok");
  const mdcSnackbarcopyCancel = document.querySelector(".mdc-snackbar#copyCancel");
  

  const menus = document.querySelector<HTMLElement>(
    ".mdc-menu#footer_share_menu"
  );
  if (menus) {
    const menu = new MDCMenu(menus);
    document.querySelector("#footer_share")?.addEventListener("click", () => {
      menu.open = true;
    });
  }
  const shareData = {
    title: "",
    text: "",
    url: "",
  };

  const dialogElement = document.querySelector(".mdc-dialog#QRcodeshare");
  if (dialogElement) {
    const dialog = new MDCDialog(dialogElement);
    document.querySelector("#webpage_qrcode")?.addEventListener("click", () => {
      dialog.open();
    });
  }

  function ShowSubWindow() {
    // サブウインドウの設定
    const subw = 560; // サブウインドウの横幅
    const subh = 440; // サブウインドウの高さ
    const now_URL = location.href;
    const subp = `https://www.addtoany.com/share#url=${location.href}`; // 表示するページ(URL)
    const subn = "共有する"; // サブウインドウの名称
    // 表示座標の計算
    const subx = (screen.availWidth - subw) / 2; // X座標
    const suby = (screen.availHeight - subh) / 2; // Y座標
    // サブウインドウのオプション文字列を作る
    const SubWinOpt =
      "width=" + subw + ",height=" + subh + ",top=" + suby + ",left=" + subx;
    // サブウインドウを表示
    window.open(subp, subn, SubWinOpt);
  }
  // シェアは「ユーザーによる有効化」により起動させる必要があります
  document
    .querySelector("#webpage_share")
    ?.addEventListener("click", async () => {
      if (!!navigator.share) {
        try {
          await navigator.share(shareData);
        } catch (err) {}
      } else {
        ShowSubWindow();
      }
    });
  document.querySelector("#LinkCopy")?.addEventListener("click", () => {
    if (navigator.clipboard) {
      const btn_content = location.href;
      navigator.clipboard.writeText(btn_content).then(
        () => {
          if (mdcSnackbarCopyok) {
            const snackbar_copyok = new MDCSnackbar(mdcSnackbarCopyok);
            snackbar_copyok.open();
          }
        },
        () => {
          if(mdcSnackbarcopyCancel) {
            const snackbar_copyCancel = new MDCSnackbar(mdcSnackbarcopyCancel);
            snackbar_copyCancel.open();
          }
          
          console.log("Ops, something went wrong...");
        }
      );
    } else {
      if(mdcSnackbarcopyCancel) {
            const snackbar_copyCancel = new MDCSnackbar(mdcSnackbarcopyCancel);
            snackbar_copyCancel.open();
          }
    }
  });

  function snackbarElementCheck() {}
</script>
<style>
  .mdc-dialog .mdc-dialog__content {
    padding: 0;
  }
  .a2a_scroll {
    display: block;
    overflow-x: scroll;
  }
  .a2a_w {
    overflow: hidden;
    width: 64px;
    height: 64px;
  }
  .a2a_kit {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    margin-inline: auto;
  }
  .mdc-dialog__surface {
    overflow: hidden;
  }
  body {
    padding: 0;
    margin: 0;
  }
  hr {
    border-bottom-color: rgba(0, 0, 0, 0.12);
    display: block;
    user-select: none;
    height: 1px;
    border: 0;
    border-top: 1px solid rgba(0, 0, 0, 0.12);
    margin: 1em 0;
    padding: 0;
    speak: none;
  }
  .grid_qrcode {
    display: grid;
    gap: 10px;
    justify-items: center;
  }
</style>
